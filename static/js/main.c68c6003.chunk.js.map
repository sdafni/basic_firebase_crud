{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Job.js","components/Jobs.js","components/AddJob.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Job","job","onDelete","onToggle","onDoubleClick","id","companyName","cursor","jobTitle","Jobs","jobs","map","index","AddJob","useState","setcompanyName","setjobTitle","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","About","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","jobsCollectionRef","collection","App","showAddJob","setShowAddJob","setJobs","useEffect","a","fetchJobs","jobsFromServer","getJobs","getDocs","JobsColSnapshot","jobsList","docs","doc","data","addJob","String","Math","floor","random","newJob","setDoc","deleteJob","jobDoc","deleteDoc","filter","path","element","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c68c6003.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue',\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation()\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      {location.pathname === '/' && (\n        <Button\n          color={showAdd ? 'red' : 'green'}\n          text={showAdd ? 'Close' : 'Add'}\n          onClick={onAdd}\n        />\n      )}\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Job seeker',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black',\n// }\n\nexport default Header\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to='/about'>About</Link>\n    </footer>\n  )\n}\n\nexport default Footer\n","import { FaTimes } from 'react-icons/fa'\n\nconst Job = ({ job, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`job`}\n      onDoubleClick={() => onToggle(job.id)}\n    >\n      <h3>\n        {job.companyName}{' '}\n        <FaTimes\n          style={{ color: 'red', cursor: 'pointer' }}\n          onClick={() => onDelete(job.id)}\n        />\n      </h3>\n      <p>{job.jobTitle}</p>\n    </div>\n  )\n}\n\nexport default Job\n","import Job from './Job'\n\nconst Jobs = ({ jobs, onDelete, onToggle }) => {\n  return (\n    <>\n      {jobs.map((job, index) => (\n        <Job key={index} job={job} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  )\n}\n\nexport default Jobs\n","import { useState } from 'react'\n\nconst AddJob = ({ onAdd }) => {\n  const [companyName, setcompanyName] = useState('')\n  const [jobTitle, setjobTitle] = useState('')\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!companyName) {\n      alert('Please add a companyName')\n      return\n    }\n\n    onAdd({ companyName, jobTitle})\n\n    setcompanyName('')\n    setjobTitle('')\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n\n\n      <div className='form-control'>\n        <label>Company</label>\n        <input\n          id=\"comapnyNAme\"\n          type='text'\n          placeholder='Company name'\n          value={companyName}\n          onChange={(e) => setcompanyName(e.target.value)}\n        />\n      </div>\n\n      <div className='form-control'>\n        <label>Job title</label>\n        <input\n          id='jobTitle'\n          type='text'\n          placeholder='Job title'\n          value={jobTitle}\n          onChange={(e) => setjobTitle(e.target.value)}\n        />\n      </div>\n\n\n      <div className='form-control  form-control-check'>\n        <label>Applied</label>\n        <input\n          type='checkbox'\n          value={jobTitle}\n          onChange={(e) => setjobTitle(e.target.value)}\n        />\n      </div>\n\n      <input type='submit' value='Save Job' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddJob\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to='/'>Go Back</Link>\n    </div>\n  )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Jobs from './components/Jobs'\nimport AddJob from './components/AddJob'\nimport About from './components/About'\n\n\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"@firebase/firestore\";\n\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  setDoc\n} from \"firebase/firestore\";// Follow this pattern to import other Firebase services\n// import { } from 'firebase/<service>';\n\n// TODO: Replace the following with your app's Firebase project configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBZAyI_ON7F4VEZ_9k1ETzF4_k6qcBJ1uo\",\n  authDomain: \"yuveta2-166505.firebaseapp.com\",\n  databaseURL: \"https://yuveta2-166505-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"yuveta2-166505\",\n  storageBucket: \"yuveta2-166505.appspot.com\",\n  messagingSenderId: \"238877844764\",\n  appId: \"1:238877844764:web:0b49af2563aa55139806d9\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n\n\nconst jobsCollectionRef = collection(db, \"jobs\");\n\n\nconst App = () => {\n  const [showAddJob, setShowAddJob] = useState(false)\n  const [jobs, setJobs] = useState([])\n\n  useEffect(() => {\n    const getJobs = async () => {\n      const jobsFromServer = await fetchJobs()\n      setJobs(jobsFromServer)\n    }\n\n    getJobs()\n  }, [])\n\n  // Fetch Jobs\n  const fetchJobs = async () => {\n    const JobsColSnapshot = await getDocs(jobsCollectionRef);\n    const jobsList = JobsColSnapshot.docs.map(doc => doc.data());\n    return jobsList;\n\n\n    // const res = await fetch('http://localhost:5000/jobs')\n    // const data = await res.json()\n\n    // return data\n  }\n\n  // Fetch Job\n  const fetchJob = async (id) => {\n\n    // const res = await fetch(`http://localhost:5000/jobs/${id}`)\n    // const data = await res.json()\n\n    const data = doc(db, \"jobs\", id);\n\n\n    return data\n  }\n\n  // Add Job\n  const addJob = async (job) => {\n\n\n    const id = String(Math.floor(Math.random() * 10000) + 1);\n    const newJob = { id, ...job }\n\n    // Add a new document in collection \"cities\"\n    // await addDoc(jobsCollectionRef, newJob)\n    await setDoc(doc(db, \"jobs\", newJob.id), newJob);\n\n    // const res = await fetch('http://localhost:5000/jobs', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-type': 'application/json',\n    //   },\n    //   body: JSON.stringify(job),\n    // })\n\n    // const data = await res.json()\n    const data = await fetchJobs()\n    const jobsFromServer = await fetchJobs()\n    setJobs(jobsFromServer)\n\n    // TODO why, if we fetch jobs?\n    //setJobs([...jobs, data])\n\n  }\n\n  // Delete Job\n  const deleteJob = async (id) => {\n\n    const jobDoc = doc(db, \"jobs\", id);\n    await deleteDoc(jobDoc);\n    setJobs(jobs.filter((job) => job.id !== id))\n\n    // const res = await fetch(`http://localhost:5000/jobs/${id}`, {\n    //   method: 'DELETE',\n    // })\n    // //We should control the response status to decide if we will change the state or not.\n    // res.status === 200\n    //   ? setJobs(jobs.filter((job) => job.id !== id))\n    //   : alert('Error Deleting This Job')\n  }\n\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddJob(!showAddJob)}\n          showAdd={showAddJob}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddJob && <AddJob onAdd={addJob} />}\n                {jobs.length > 0 ? (\n                  <Jobs\n                    jobs={jobs}\n                    onDelete={deleteJob}\n                  />\n                ) : (\n                  'No Jobs To Show'\n                )}\n              </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}